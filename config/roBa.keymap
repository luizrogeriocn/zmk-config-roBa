#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 2

/* Global defaults */

#define COMBO_TERM 30
#define TAPPING_TERM 250
#define QUICK_TAP_TERM 250
#define REQUIRE_PRIOR_IDLE 175

&mt {
    tapping-term-ms = <TAPPING_TERM>;
    flavor = "tap-preferred";
    quick-tap-ms = <QUICK_TAP_TERM>;
    require-prior-idle-ms = <REQUIRE_PRIOR_IDLE>;
};

&lt {
    tapping-term-ms = <TAPPING_TERM>;
    flavor = "tap-preferred";
    quick-tap-ms = <QUICK_TAP_TERM>;
};

/ {
    combos {
        compatible = "zmk,combos";

        Quote {
            bindings = <&kp SINGLE_QUOTE>;
            key-positions = <8 7>;
            layers = <0>;
            require-prior-idle-ms = <175>;
        };

        Grave {
            bindings = <&kp GRAVE>;
            key-positions = <1 2>;
            layers = <0>;
            require-prior-idle-ms = <175>;
        };

        exclamation {
            bindings = <&kp EXCLAMATION>;
            key-positions = <0 10>;
            layers = <0>;
        };

        at {
            bindings = <&kp AT>;
            key-positions = <11 1>;
            layers = <0>;
        };

        hash {
            bindings = <&kp HASH>;
            key-positions = <12 2>;
            layers = <0>;
        };

        dollar {
            bindings = <&kp DOLLAR>;
            key-positions = <3 13>;
            layers = <0>;
        };

        percent {
            bindings = <&kp PERCENT>;
            key-positions = <4 14>;
            layers = <0>;
        };

        caret {
            bindings = <&kp CARET>;
            key-positions = <10 22>;
            layers = <0>;
        };

        ampersand {
            bindings = <&kp AMPERSAND>;
            key-positions = <23 11>;
            layers = <0>;
        };

        asterisk {
            bindings = <&kp ASTERISK>;
            key-positions = <24 12>;
            layers = <0>;
        };

        Lparen {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <25 13>;
            layers = <0>;
        };

        Rparen {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <14 26>;
            layers = <0>;
        };

        minus {
            bindings = <&kp MINUS>;
            key-positions = <31 19>;
            layers = <0>;
        };

        underline {
            bindings = <&kp UNDERSCORE>;
            key-positions = <19 7>;
            layers = <0>;
        };

        backslash {
            bindings = <&kp BACKSLASH>;
            key-positions = <33 21>;
            layers = <0>;
        };

        Lbracket {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <17 29>;
            layers = <0>;
        };

        Rbracket {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <18 30>;
            layers = <0>;
        };

        Lbrace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <17 5>;
            layers = <0>;
        };

        Rbrace {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <18 6>;
            layers = <0>;
        };

        pipe {
            bindings = <&kp PIPE>;
            key-positions = <21 9>;
            layers = <0>;
        };

        plus {
            bindings = <&kp PLUS>;
            key-positions = <32 20>;
            layers = <0>;
        };

        equal {
            bindings = <&kp EQUAL>;
            key-positions = <20 8>;
            layers = <0>;
        };

        Dquote {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <7 6>;
            layers = <0>;
        };

        tilde {
            bindings = <&kp TILDE>;
            key-positions = <2 3>;
            layers = <0>;
            require-prior-idle-ms = <175>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <23 24>;
            layers = <0>;
            require-prior-idle-ms = <175>;
        };

        esc {
            bindings = <&kp ESC>;
            key-positions = <24 25>;
            layers = <0>;
            require-prior-idle-ms = <175>;
        };

        enter {
            bindings = <&kp ENTER>;
            key-positions = <30 31>;
            layers = <0>;
            require-prior-idle-ms = <175>;
        };

        bkspc {
            bindings = <&kp BACKSPACE>;
            key-positions = <32 31>;
            layers = <0>;
            require-prior-idle-ms = <175>;
        };

        outstring {
            bindings = <&outputmacro>;
            key-positions = <28 16>;
        };

        qwerty {
            bindings = <&tog 1>;
            key-positions = <9 42>;
            layers = <0>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        outputmacro: outputmacro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp Z &kp X &kp C &kp V &kp FSLH &kp DOT &kp COMMA &kp M>;
            label = "OUTPUTMACRO";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        dot_colon: dot_colon {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT_COLON";
            bindings = <&kp PERIOD>, <&kp COLON>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        semi_comma: semi_comma {
            compatible = "zmk,behavior-mod-morph";
            label = "SEMI_COMMA";
            bindings = <&kp COMMA>, <&kp SEMICOLON>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q               &kp W           &kp F               &kp P             &kp B                                         &kp J            &kp L             &kp U               &kp Y           &kp SEMICOLON
&mt LEFT_CONTROL A  &mt LEFT_ALT R  &mt LEFT_COMMAND S  &mt LEFT_SHIFT T  &kp G        &kp C_PLAY_PAUSE      &kp DEL    &kp M            &mt LEFT_SHIFT N  &mt LEFT_COMMAND E  &mt LEFT_ALT I  &mt LEFT_CONTROL O
&kp Z               &kp X           &kp C               &kp D             &kp V        &caps_word            &kp TAB    &kp K            &kp H             &lt 5 COMMA         &kp DOT         &kp SLASH
&none               &none           &none               &kp LEFT_SHIFT    &lt 2 SPACE  &lt 1 ESC             &kp ENTER  &lt 2 BACKSPACE                                                        &mo 3
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        gaming {
            bindings = <
&kp ESCAPE        &kp KP_NUMBER_7  &kp KP_N8        &kp KP_NUMBER_9  &none                                   &none  &kp F9  &kp F10  &kp F11  &kp F12
&kp LEFT_SHIFT    &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &none      &kp C_PLAY_PAUSE      &none  &none  &kp F5  &kp F6   &kp F7   &kp F8
&kp LEFT_CONTROL  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &none      &none                 &none  &none  &kp F1  &kp F2   &kp F3   &kp F4
&kp LEFT_ALT      &kp PRINTSCREEN  &none            &none            &kp SPACE  &none                 &none  &none                            &to 0
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        NUM {
            bindings = <
&none  &kp HOME  &kp UP_ARROW    &kp END    &kp PAGE_UP                      &none           &kp N7        &kp N8        &kp N9        &kp COLON
&none  &kp LEFT  &kp DOWN_ARROW  &kp RIGHT  &kp PAGE_DOWN  &none      &none  &kp UNDERSCORE  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp PERIOD
&none  &none     &none           &none      &none          &none      &none  &kp N0          &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp COMMA
&none  &none     &none           &none      &none          &none      &none  &none                                                     &none
            >;
        };

        keebconfig {
            bindings = <
&none         &none         &none         &none        &none                                         &bl BL_ON    &none  &none  &none  &none
&none         &none         &none         &none        &none        &bt BT_CLR_ALL      &bt BT_NXT   &none        &none  &none  &none  &none
&none         &none         &none         &none        &none        &bt BT_CLR          &bt BT_PRV   &none        &none  &none  &none  &none
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bootloader  &bootloader  &to 0               &bootloader  &bootloader                       &none
            >;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB4  &mo 5     &mkp MB5  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                &trans
            >;
        };

        SCROLL {
            bindings = <
&none  &none  &none  &none  &none                    &none  &none      &none     &none      &none
&none  &none  &none  &none  &none  &none      &none  &none  &mkp LCLK  &mkp MB3  &mkp RCLK  &none
&none  &none  &none  &none  &none  &none      &none  &none  &mkp MB4   &none     &mkp MB5   &none
&none  &none  &none  &none  &none  &none      &none  &none                                  &none
            >;
        };
    };
};
