#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include "zmk-helpers/key-labels/42.h"                                      // Source key-labels.

#define KEYS_L LT0 LT1 LT2 LT3 LT4 LM0 LM1 LM2 LM3 LM4 LB0 LB1 LB2 LB3 LB4  // Left-hand keys.
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RM0 RM1 RM2 RM3 RM4 RB0 RB1 RB2 RB3 RB4  // Right-hand keys.
#define THUMBS LH2 LH1 LH0 RH0 RH1 RH2                                      // Thumb keys.

#define MOUSE 4
#define SCROLL 5
#define NUM 2

/* Left-hand HRMs. */
ZMK_HOLD_TAP(hml,
    flavor = "balanced";
    tapping-term-ms = <280>;
    quick-tap-ms = <175>;
    require-prior-idle-ms = <150>;
    bindings = <&kp>, <&kp>;
    hold-trigger-key-positions = <KEYS_R THUMBS>;
    hold-trigger-on-release;
)

/* Right-hand HRMs. */
ZMK_HOLD_TAP(hmr,
    flavor = "balanced";
    tapping-term-ms = <280>;
    quick-tap-ms = <175>;
    require-prior-idle-ms = <150>;
    bindings = <&kp>, <&kp>;
    hold-trigger-key-positions = <KEYS_L THUMBS>;
    hold-trigger-on-release;
)

&mt {
    flavor = "balanced";
    quick-tap-ms = <175>;
};

/ {
    combos {
        compatible = "zmk,combos";

        enter {
            bindings = <&kp ENTER>;
            key-positions = <30 31>;
        };

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <24 25>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <23 24>;
        };

        backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <31 32>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q               &kp W         &kp F             &kp P      &kp B                                                 &kp J            &kp L  &kp U      &kp Y    &kp SEMICOLON
&mt LEFT_CONTROL A  &kp R         &kp S             &kp T      &kp G        &kp C_PLAY_PAUSE             &trans      &kp M            &kp N  &kp E      &kp I    &mt RIGHT_CONTROL O
&mt LEFT_SHIFT Z    &kp X         &kp C             &kp D      &kp V        &bl BL_TOG                   &trans      &kp K            &kp H  &kp COMMA  &kp DOT  &mt RIGHT_COMMAND SLASH
&mo 3               &kp LEFT_ALT  &kp LEFT_COMMAND  &lt 1 TAB  &lt 2 SPACE  &mt LEFT_SHIFT CAPSLOCK      &kp DELETE  &lt 2 BACKSPACE                             &mo 3
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        Symbols {
            bindings = <
&kp EXCLAMATION  &kp AT_SIGN  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp ASTERISK                       &kp GRAVE  &kp TILDE      &kp SINGLE_QUOTE  &kp BACKSLASH     &kp COLON
&kp HASH         &kp DOLLAR   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp PIPE       &trans      &trans  &trans     &kp LESS_THAN  &kp UNDERSCORE    &kp GREATER_THAN  &kp DOUBLE_QUOTES
&kp PERCENT      &kp CARET    &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp AMPERSAND  &trans      &trans  &trans     &kp EQUAL      &kp MINUS         &kp PLUS          &kp QUESTION
&trans           &trans       &trans                &trans                 &trans         &trans      &trans  &trans                                                        &trans
            >;
        };

        NUM {
            bindings = <
&trans  &kp HOME  &kp UP_ARROW    &kp END    &kp PAGE_UP                        &trans          &kp N7        &kp N8        &kp N9        &kp N0
&trans  &kp LEFT  &kp DOWN_ARROW  &kp RIGHT  &kp PAGE_DOWN  &trans      &trans  &kp UNDERSCORE  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp PERIOD
&trans  &trans    &trans          &trans     &trans         &trans      &trans  &trans          &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp COMMA
&trans  &trans    &trans          &trans     &trans         &trans      &trans  &trans                                                    &trans
            >;
        };

        keebconfig {
            bindings = <
&trans  &trans  &trans  &trans  &trans                                &trans      &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans       &trans      &bt BT_NXT   &trans      &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans       &trans      &bt BT_PRV   &trans      &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &bootloader  &to 0       &bootloader  &bt BT_CLR                          &trans
            >;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &mo 5     &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };
    };
};
